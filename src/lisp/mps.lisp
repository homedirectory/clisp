(def! new-library
      (let* ((set-name! (lambda (mname new-name) (reset! mname new-name)))
             (add-book! (lambda (mbooks book) 
                             (swap! mbooks (lambda (lst) (cons book lst)))))
             (dispatch (lambda (msg mname mbooks)
                            (cond ((= msg 'name) (deref mname))
                                  ((= msg 'books) (deref mbooks))
                                  ((= msg 'set-name!) 
                                   (lambda (name) (set-name! mname name)))
                                  ((= msg 'add-book!)
                                   (lambda (book) (add-book! mbooks book)))
                                  (true (throw (list "unknown message" msg)))))))
        (lambda (name books)
             (let* ((mname (atom name))
                    (mbooks (atom books)))
               (lambda (msg) (dispatch msg mname mbooks))))))

(def! library-name (lambda (lib) (lib 'name)))
(def! library-books (lambda (lib) (lib 'books)))
(def! library-set-name! (lambda (lib name) ((lib 'set-name!) name)))
(def! library-add-book! (lambda (lib book) ((lib 'add-book!) book)))

(def! lib (new-library 'eureka '()))
(library-add-book! lib '("Hackers" "Steven Levy"))
(library-add-book! lib '("Anathem" "Neal Stephenson"))
(library-add-book! lib '("The Gay Science" "Friedrich Nietzsche"))
